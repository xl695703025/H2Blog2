<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxia.blog.mapper.ArticleMapper">
	<select id="selectArticleByUserName" resultType="Article">
		select a.*,u.userNickName,c1.categoryName  childCategory,c2.categoryName parentCategory 
		from article a,user u,category c1 LEFT JOIN category c2
		on c1.categoryPid=c2.categoryId
		 where articleUserName=#{userName}
		 and a.articleUserName=u.userName
		 and a.articleChildCategoryId=c1.categoryId
		 and a.articleStatus=1
		 order by a.articlePostTime desc
		 limit #{index},#{pageSize}
	</select>
	<select id="selectArticleById" resultType="Article">
		select a.*,u.userNickName,c1.categoryName  childCategory,c2.categoryName parentCategory 
		from article a,user u,category c1 LEFT JOIN category c2
		on c1.categoryPid=c2.categoryId
		 where articleId=#{articleId}
		 and a.articleUserName=u.userName
		 and a.articleChildCategoryId=c1.categoryId
		 and a.articleStatus=1
		 order by a.articlePostTime desc
	</select>
	<select id="selectArticleCount" resultType="java.lang.Integer">
		select count(1) from article where articleUserName=#{userName} and articleStatus=1
	</select>
	<select id="selectArticleViewCount" resultType="java.lang.Integer">
		select sum(articleViewCount) from article where articleUserName=#{userName} and articleStatus=1
	</select>
	<select id="selectArticleLikeCount" resultType="java.lang.Integer">
		select sum(articleLikeCount) from article where articleUserName=#{userName} and articleStatus=1
	</select>
	<select id="selectArticleCommentCount" resultType="java.lang.Integer">
		select sum(articleCommentCount) from article where articleUserName=#{userName} and articleStatus=1
	</select>
	<select id="selectArticleByCategoryId" resultType="Article">
		select a.*,u.userNickName,c1.categoryName  childCategory,c2.categoryName parentCategory 
		from article a,user u,category c1 LEFT JOIN category c2
		on c1.categoryPid=c2.categoryId
		 where articleUserName=#{userName}
		 and a.articleUserName=u.userName
		 and a.articleChildCategoryId=c1.categoryId
		 and(a.articleChildCategoryId=#{categoryId} or a.articleParentCategoryId=#{categoryId})
		 and a.articleStatus=1
		 order by a.articlePostTime desc
		 <!--  limit #{index},#{pageSize} -->
	</select>
	<delete id="delArticleById">
		delete from article
		where articleId=#{articleId}
	</delete>
	<!-- 修改文章分类 -->
	<update id="updateArticleCategoryById" parameterType="Article">
		update article set articleParentCategoryId=#{categoryId},articleChildCategoryId=#{categoryId}
		where articleId=#{articleId}
	</update>
	
	<insert id="insertArticle">
		insert into article(articleUserName,articleTitle,articleContent,articleParentCategoryId,articleChildCategoryId,articleTagIds,articlePostTime)
		values(#{userName},#{article.articleTitle},#{article.articleContent},#{articleParentCategoryId},#{articleChildCategoryId},#{article.articleTagIds},#{article.articlePostTime})
	</insert>
	<update id="updateArticle">
		update article
		set articleTitle=#{article.articleTitle},
		articleParentCategoryId=#{articleParentCategoryId},
		articleChildCategoryId=#{articleChildCategoryId},
		articleTagIds=#{article.articleTagIds},
		articleContent=#{article.articleContent},
		articleUpdateTime=#{article.articleUpdateTime}
		where articleId=#{article.articleId}
	</update>
	
</mapper>